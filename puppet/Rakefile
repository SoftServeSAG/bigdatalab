require 'rake'
require 'rubygems'
require 'bundler'
require 'rspec/core/rake_task'

desc "Run all RSpec code examples"
RSpec::Core::RakeTask.new(:rspec) do |t|
  File.exist?('spec/spec.opts') ? opts = File.read("spec/spec.opts").chomp : opts = ""
  t.rspec_opts = opts
end

SPEC_SUITES = (Dir.entries('spec') - ['.', '..', 'fixtures']).select {|e| File.directory? "spec/#{e}" }
namespace :rspec do
  SPEC_SUITES.each do |suite|
    desc "Run #{suite} RSpec code examples"
    RSpec::Core::RakeTask.new(suite) do |t|
      t.pattern = "spec/#{suite}/**/*_spec.rb"
      File.exist?('spec/spec.opts') ? opts = File.read("spec/spec.opts").chomp : opts = ""
      t.rspec_opts = opts
    end
  end
end
task :default => :rspec

begin
  if Gem::Specification::find_by_name('puppet-lint')
    require 'puppet-lint/tasks/puppet-lint'
    PuppetLint.configuration.pattern = "local_modules/**/*.pp"
    PuppetLint.configuration.ignore_paths = ["spec/**/*.pp", "vendor/**/*.pp"]
    task :default => [:rspec, :lint]
  end
rescue Gem::LoadError
end

desc "Prepare module dependencies"
task :prep do
  sh "librarian-puppet install"
  sh "mkdir spec/fixtures/modules"
  MODULES = Dir.entries('modules') - ['.', '..']
  MODULES.each do |m|
    sh "ln -s ../../../modules/#{m} spec/fixtures/modules/#{m}"
  end
end

desc "Clean module dependencies"
task :clean do
  sh "rm -fR spec/fixtures/modules"
  sh "rm -fR modules"
end